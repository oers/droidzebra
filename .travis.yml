language: android

jdk: oraclejdk8

before_install:
 - chmod +x gradlew
 # newest Android NDK
 - if [ `uname -m` = x86_64]; then wget http://dl.google.com/android/ndk/android-ndk-r9c-linux-x86_64.tar.bz2 -O ndk.tgz; else wget http://dl.google.com/android/ndk/android-ndk-r9c-linux-x86.tar.bz2 -O ndk.tgz; fi
 - tar -xf ndk.tgz
 - export ANDROID_NDK_HOME=`pwd`/android-ndk-r9c
 - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_NDK_HOME}

install:
  - echo y | android update sdk -u -a -t tools
  - echo y | android update sdk -u -a -t platform-tools
  - echo y | android update sdk -u -a -t build-tools-25.0.2
  - echo y | android update sdk -u -a -t android-19
  - echo y | android update sdk -u -a -t extra-google-m2repository
  - echo y | android update sdk -u -a -t extra-android-m2repository

before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:      #Cache all dirs under .gradle folder
    - $HOME/.gradle/daemon      #Cache daemon logs
    - $HOME/.gradle/native      #Cache library downloaded from the gradle dependency
    - $HOME/.gradle/wrapper     #Cache the gradle

android:
  components:
    - extra
    - ndk-bundle

env:
  global:
   # install timeout in minutes (2 minutes by default)
    - ADB_INSTALL_TIMEOUT=8

# Emulator Management: Create, Start and Wait
before_script:
  - echo no | android create avd --force -n test -t android-21 --abi armeabi-v7a
  - emulator -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - adb logcat *:W | tee logcat.log > /dev/null 2>&1 &

after_script:
  - cat logcat.log
